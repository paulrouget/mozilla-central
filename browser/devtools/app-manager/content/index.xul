<?xml version="1.0" encoding="UTF-8"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
     - License, v. 2.0. If a copy of the MPL was not distributed with this
     - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
<!DOCTYPE window [
  <!ENTITY % appMgrDTD SYSTEM "chrome://browser/locale/devtools/app-manager.dtd" >
  %appMgrDTD;
]>

<?xml-stylesheet href="chrome://global/skin/global.css"?>
<?xml-stylesheet href="chrome://browser/content/devtools/app-manager/index.css"?>

<window id="app-manager-window"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        title="&index.title;"
        windowtype="devtools:app-manager"
        macanimationtype="document"
        fullscreenbutton="true"
        screenX="4" screenY="4"
        width="800" height="600"
        persist="screenX screenY width height sizemode">

  <vbox flex="1">
    <hbox id="content" flex="1">
      <vbox id="tabs">
        <button class="button projects-button" onclick="selectTab('projects')">&index.projects;</button>
        <button class="button device-button" onclick="selectTab('device')">&index.device;</button>
      </vbox>
      <hbox id="tab-panels" flex="1">
        <iframe flex="1" class="panel projects-panel" src="chrome://browser/content/devtools/app-manager/projects.xhtml"/>
        <iframe flex="1" class="panel device-panel" src="chrome://browser/content/devtools/app-manager/device.xhtml"/>
      </hbox>
    </hbox>
    <iframe id="connection-footer" src="chrome://browser/content/devtools/app-manager/connection-footer.xhtml"></iframe>
  </vbox>

  <script type="application/javascript;version=1.8">
    const Cu = Components.utils;
    Cu.import("resource:///modules/devtools/gDevTools.jsm");
    const {devtools} = Cu.import("resource://gre/modules/devtools/Loader.jsm", {});
    const {require} = devtools;
    const {ConnectionManager, Connection} = require("devtools/client/connection-manager");

    let connection;

    window.addEventListener("message", function(event) {
      try {
        let json = JSON.parse(event.data);
        if (json.name == "connection") {
          let cid = +json.cid;
          for (let c of ConnectionManager.connections) {
            if (c.uid == cid) {
              connection = c;
              onNewConnection();
              break;
            }
          }
        }
      } catch(e) { Cu.reportError(e); }

      // Forward message
      let panels = document.querySelectorAll(".panel");
      for (let frame of panels) {
        frame.contentWindow.postMessage(event.data, "*");
      }
    }, false);

    function onNewConnection() {
      connection.on(Connection.Status.CONNECTED, () => {
        document.querySelector("#content").classList.add("connected");
      });
      connection.on(Connection.Status.DISCONNECTED, () => {
        document.querySelector("#content").classList.remove("connected");
      });
    }

    function selectTab(id) {
      for (let type of ["button", "panel"]) {
        let oldSelection = document.querySelector("." + type + "[selected]");
        let newSelection = document.querySelector("." + id + "-" + type);
        if (!newSelection) continue;
        if (oldSelection) oldSelection.removeAttribute("selected");
        newSelection.setAttribute("selected", "true");
      }
    }
    selectTab("projects");
  </script>
</window>
